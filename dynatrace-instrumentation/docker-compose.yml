version: "3.9"

# https://docs.docker.com/compose/compose-file/compose-file-v3/#extension-fields
x-build: &dockerfile-dev-build
  context: .
  dockerfile: Dockerfile.dev

services:
  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    ports:
      - 5432:5432
    networks:
      - djangotemplate
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 15672:15672
    volumes:
      - ./tests/resources/custom-rabbitmq-conf:/etc/rabbitmq/
    networks:
      - djangotemplate
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: *dockerfile-dev-build
    env_file: .env
    volumes:
      - .:/app
    ports:
      - "${DJANGO_BIND_PORT}:${DJANGO_BIND_PORT}"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command:
      [
        "./scripts/start-development.sh",
      ]
    networks:
      - djangotemplate

  app-pubsub:
    build: *dockerfile-dev-build
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command:
      [
        "./scripts/consumers/start-create-audit-action-consumer.sh",
      ]
    networks:
      - djangotemplate

  app-production:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - .:/app
    ports:
      - "${DJANGO_BIND_PORT}:${DJANGO_BIND_PORT}"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command:
      [
        "./scripts/start-production.sh",
      ]
    networks:
      - djangotemplate

  integration-tests:
    build: *dockerfile-dev-build
    env_file: .env
    volumes:
      - .:/app
    ports:
      - "${DJANGO_BIND_PORT}:${DJANGO_BIND_PORT}"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command:
      [
        "./scripts/start-tests.sh",
      ]
    networks:
      - djangotemplate
  lint-formatter:
    build: *dockerfile-dev-build
    volumes:
      - .:/app
    command: ["./scripts/start-formatter-lint.sh"]
    networks:
      - djangotemplate

networks:
  djangotemplate:
